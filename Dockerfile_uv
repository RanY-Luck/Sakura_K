# Select the image to build based on SERVER_TYPE, defaulting to fastapi_server
ARG SERVER_TYPE=fastapi_server

# 构建阶段：安装编译依赖和项目依赖
FROM tiangolo/uvicorn-gunicorn:python3.10-slim AS builder

# 设置环境变量，避免交互式安装
ENV DEBIAN_FRONTEND=noninteractive

# 安装必要的构建工具（带超时和重试机制）
RUN --mount=type=cache,target=/var/cache/apt \
    for i in $(seq 1 3); do \
        echo "Attempt $i: Installing build tools..." && \
#        timeout 300 apt-get update -y && \
        timeout 300 apt-get install -y g++ && \
        rm -rf /var/lib/apt/lists/* && \
        echo "Build tools installed successfully" && \
        break || \
        if [ $i -lt 3 ]; then \
            echo "Attempt $i failed! Retrying in 5 seconds..." && \
            sleep 5; \
        else \
            echo "All attempts failed for build tools installation!" && exit 1; \
        fi; \
    done

WORKDIR /Sakura_k

# 复制项目根目录中的 wheels 文件夹到容器
COPY ./wheels/ /wheels/

# 列出wheels目录的内容，用于调试
RUN echo "Contents of wheels directory:" && ls -la /wheels/

# 复制依赖文件
COPY pyproject.toml ./

# 安装 asyncmy 和项目依赖（带超时和重试机制）
RUN echo "Installing dependencies..." && \
    for i in $(seq 1 3); do \
        echo "Attempt $i: Installing asyncmy and project dependencies..." && \
        timeout 600 python -m pip install --no-index --find-links=/wheels uv asyncmy && \
        timeout 600 uv pip install --system -e . --index-url https://pypi.tuna.tsinghua.edu.cn/simple --extra-index-url https://mirrors.aliyun.com/pypi/simple/ && \
        echo "Dependencies installed successfully" && \
        break || \
        if [ $i -lt 3 ]; then \
            echo "Attempt $i failed! Retrying in 10 seconds..." && \
            sleep 10; \
        else \
            echo "All attempts failed for dependencies installation!" && exit 1; \
        fi; \
    done

# 复制剩余文件
COPY . .
COPY .env.docker ./.env

# 重命名 .env 文件
RUN if [ -f ".env.docker" ]; then mv .env.docker .env; fi

# 使用 python 直接运行应用
CMD ["python", "app.py"]